{
  "Complete Home Page": {
    "prefix": "flp-home",
    "description": "Complete home page with Material 3 design",
    "body": [
      "import 'package:flutter/material.dart';",
      "",
      "class ${1:HomePage} extends StatefulWidget {",
      "  const ${1:HomePage}({super.key});",
      "",
      "  @override",
      "  State<${1:HomePage}> createState() => _${1:HomePage}State();",
      "}",
      "",
      "class _${1:HomePage}State extends State<${1:HomePage}> {",
      "  int _selectedIndex = 0;",
      "",
      "  final List<Widget> _pages = [",
      "    const ${2:DashboardPage}(),",
      "    const ${3:SearchPage}(),",
      "    const ${4:FavoritesPage}(),",
      "    const ${5:ProfilePage}(),",
      "  ];",
      "",
      "  @override",
      "  Widget build(BuildContext context) {",
      "    return Scaffold(",
      "      appBar: AppBar(",
      "        title: Text('${6:App Name}'),",
      "        backgroundColor: Theme.of(context).colorScheme.inversePrimary,",
      "        actions: [",
      "          IconButton(",
      "            onPressed: () {",
      "              ${7:// Handle notifications}",
      "            },",
      "            icon: const Icon(Icons.notifications_outlined),",
      "          ),",
      "          IconButton(",
      "            onPressed: () {",
      "              ${8:// Handle settings}",
      "            },",
      "            icon: const Icon(Icons.settings_outlined),",
      "          ),",
      "        ],",
      "      ),",
      "      body: IndexedStack(",
      "        index: _selectedIndex,",
      "        children: _pages,",
      "      ),",
      "      bottomNavigationBar: NavigationBar(",
      "        selectedIndex: _selectedIndex,",
      "        onDestinationSelected: (index) {",
      "          setState(() {",
      "            _selectedIndex = index;",
      "          });",
      "        },",
      "        destinations: const [",
      "          NavigationDestination(",
      "            icon: Icon(Icons.home_outlined),",
      "            selectedIcon: Icon(Icons.home),",
      "            label: 'Home',",
      "          ),",
      "          NavigationDestination(",
      "            icon: Icon(Icons.search_outlined),",
      "            selectedIcon: Icon(Icons.search),",
      "            label: 'Search',",
      "          ),",
      "          NavigationDestination(",
      "            icon: Icon(Icons.favorite_outline),",
      "            selectedIcon: Icon(Icons.favorite),",
      "            label: 'Favorites',",
      "          ),",
      "          NavigationDestination(",
      "            icon: Icon(Icons.person_outline),",
      "            selectedIcon: Icon(Icons.person),",
      "            label: 'Profile',",
      "          ),",
      "        ],",
      "      ),",
      "    );",
      "  }",
      "}$0"
    ]
  },

  "Login Page": {
    "prefix": "flp-login",
    "description": "Complete login page with form validation",
    "body": [
      "import 'package:flutter/material.dart';",
      "",
      "class ${1:LoginPage} extends StatefulWidget {",
      "  const ${1:LoginPage}({super.key});",
      "",
      "  @override",
      "  State<${1:LoginPage}> createState() => _${1:LoginPage}State();",
      "}",
      "",
      "class _${1:LoginPage}State extends State<${1:LoginPage}> {",
      "  final _formKey = GlobalKey<FormState>();",
      "  final _emailController = TextEditingController();",
      "  final _passwordController = TextEditingController();",
      "  bool _obscurePassword = true;",
      "  bool _isLoading = false;",
      "",
      "  @override",
      "  void dispose() {",
      "    _emailController.dispose();",
      "    _passwordController.dispose();",
      "    super.dispose();",
      "  }",
      "",
      "  Future<void> _handleLogin() async {",
      "    if (_formKey.currentState!.validate()) {",
      "      setState(() {",
      "        _isLoading = true;",
      "      });",
      "",
      "      try {",
      "        ${2:// Implement login logic}",
      "        await Future.delayed(const Duration(seconds: 2));",
      "        ",
      "        if (mounted) {",
      "          ${3:// Navigate to home page}",
      "          Navigator.of(context).pushReplacementNamed('/home');",
      "        }",
      "      } catch (e) {",
      "        if (mounted) {",
      "          ScaffoldMessenger.of(context).showSnackBar(",
      "            SnackBar(",
      "              content: Text('Login failed: \\${e.toString()}'),",
      "              backgroundColor: Theme.of(context).colorScheme.error,",
      "            ),",
      "          );",
      "        }",
      "      } finally {",
      "        if (mounted) {",
      "          setState(() {",
      "            _isLoading = false;",
      "          });",
      "        }",
      "      }",
      "    }",
      "  }",
      "",
      "  @override",
      "  Widget build(BuildContext context) {",
      "    return Scaffold(",
      "      body: SafeArea(",
      "        child: Padding(",
      "          padding: const EdgeInsets.all(24.0),",
      "          child: Form(",
      "            key: _formKey,",
      "            child: Column(",
      "              mainAxisAlignment: MainAxisAlignment.center,",
      "              crossAxisAlignment: CrossAxisAlignment.stretch,",
      "              children: [",
      "                Icon(",
      "                  Icons.${4:lock_outline},",
      "                  size: 80,",
      "                  color: Theme.of(context).colorScheme.primary,",
      "                ),",
      "                const SizedBox(height: 32),",
      "                Text(",
      "                  '${5:Welcome Back}',",
      "                  style: Theme.of(context).textTheme.headlineMedium,",
      "                  textAlign: TextAlign.center,",
      "                ),",
      "                const SizedBox(height: 8),",
      "                Text(",
      "                  '${6:Please sign in to your account}',",
      "                  style: Theme.of(context).textTheme.bodyLarge?.copyWith(",
      "                    color: Theme.of(context).colorScheme.onSurfaceVariant,",
      "                  ),",
      "                  textAlign: TextAlign.center,",
      "                ),",
      "                const SizedBox(height: 48),",
      "                TextFormField(",
      "                  controller: _emailController,",
      "                  keyboardType: TextInputType.emailAddress,",
      "                  decoration: const InputDecoration(",
      "                    labelText: 'Email',",
      "                    prefixIcon: Icon(Icons.email_outlined),",
      "                    border: OutlineInputBorder(),",
      "                  ),",
      "                  validator: (value) {",
      "                    if (value == null || value.isEmpty) {",
      "                      return 'Please enter your email';",
      "                    }",
      "                    if (!RegExp(r'^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}\\$').hasMatch(value)) {",
      "                      return 'Please enter a valid email';",
      "                    }",
      "                    return null;",
      "                  },",
      "                ),",
      "                const SizedBox(height: 16),",
      "                TextFormField(",
      "                  controller: _passwordController,",
      "                  obscureText: _obscurePassword,",
      "                  decoration: InputDecoration(",
      "                    labelText: 'Password',",
      "                    prefixIcon: const Icon(Icons.lock_outlined),",
      "                    suffixIcon: IconButton(",
      "                      onPressed: () {",
      "                        setState(() {",
      "                          _obscurePassword = !_obscurePassword;",
      "                        });",
      "                      },",
      "                      icon: Icon(",
      "                        _obscurePassword",
      "                            ? Icons.visibility_outlined",
      "                            : Icons.visibility_off_outlined,",
      "                      ),",
      "                    ),",
      "                    border: const OutlineInputBorder(),",
      "                  ),",
      "                  validator: (value) {",
      "                    if (value == null || value.isEmpty) {",
      "                      return 'Please enter your password';",
      "                    }",
      "                    if (value.length < 6) {",
      "                      return 'Password must be at least 6 characters';",
      "                    }",
      "                    return null;",
      "                  },",
      "                ),",
      "                const SizedBox(height: 24),",
      "                FilledButton(",
      "                  onPressed: _isLoading ? null : _handleLogin,",
      "                  child: _isLoading",
      "                      ? const SizedBox(",
      "                          height: 20,",
      "                          width: 20,",
      "                          child: CircularProgressIndicator(",
      "                            strokeWidth: 2,",
      "                          ),",
      "                        )",
      "                      : const Text('Sign In'),",
      "                ),",
      "                const SizedBox(height: 16),",
      "                TextButton(",
      "                  onPressed: () {",
      "                    ${7:// Handle forgot password}",
      "                  },",
      "                  child: const Text('Forgot Password?'),",
      "                ),",
      "                const SizedBox(height: 32),",
      "                Row(",
      "                  mainAxisAlignment: MainAxisAlignment.center,",
      "                  children: [",
      "                    Text(",
      "                      \"Don't have an account? \",",
      "                      style: Theme.of(context).textTheme.bodyMedium,",
      "                    ),",
      "                    TextButton(",
      "                      onPressed: () {",
      "                        ${8:// Navigate to register page}",
      "                      },",
      "                      child: const Text('Sign Up'),",
      "                    ),",
      "                  ],",
      "                ),",
      "              ],",
      "            ),",
      "          ),",
      "        ),",
      "      ),",
      "    );",
      "  }",
      "}$0"
    ]
  },

  "Profile Page": {
    "prefix": "flp-profile",
    "description": "Complete profile page with user settings",
    "body": [
      "import 'package:flutter/material.dart';",
      "",
      "class ${1:ProfilePage} extends StatefulWidget {",
      "  const ${1:ProfilePage}({super.key});",
      "",
      "  @override",
      "  State<${1:ProfilePage}> createState() => _${1:ProfilePage}State();",
      "}",
      "",
      "class _${1:ProfilePage}State extends State<${1:ProfilePage}> {",
      "  final ${2:user} = {",
      "    'name': '${3:John Doe}',",
      "    'email': '${4:john.doe@example.com}',",
      "    'avatar': '${5:https://example.com/avatar.jpg}',",
      "    'phone': '${6:+1 234 567 8900}',",
      "    'location': '${7:New York, USA}',",
      "  };",
      "",
      "  @override",
      "  Widget build(BuildContext context) {",
      "    return Scaffold(",
      "      appBar: AppBar(",
      "        title: const Text('Profile'),",
      "        backgroundColor: Theme.of(context).colorScheme.inversePrimary,",
      "        actions: [",
      "          IconButton(",
      "            onPressed: () {",
      "              ${8:// Handle edit profile}",
      "            },",
      "            icon: const Icon(Icons.edit_outlined),",
      "          ),",
      "        ],",
      "      ),",
      "      body: SingleChildScrollView(",
      "        padding: const EdgeInsets.all(16),",
      "        child: Column(",
      "          children: [",
      "            // Profile Header",
      "            Card(",
      "              child: Padding(",
      "                padding: const EdgeInsets.all(24),",
      "                child: Column(",
      "                  children: [",
      "                    CircleAvatar(",
      "                      radius: 50,",
      "                      backgroundColor: Theme.of(context).colorScheme.primary,",
      "                      child: ${2:user}['avatar'] != null",
      "                          ? ClipRRect(",
      "                              borderRadius: BorderRadius.circular(50),",
      "                              child: Image.network(",
      "                                ${2:user}['avatar']!,",
      "                                fit: BoxFit.cover,",
      "                              ),",
      "                            )",
      "                          : Text(",
      "                              ${2:user}['name']![0].toUpperCase(),",
      "                              style: TextStyle(",
      "                                fontSize: 32,",
      "                                color: Theme.of(context).colorScheme.onPrimary,",
      "                              ),",
      "                            ),",
      "                    ),",
      "                    const SizedBox(height: 16),",
      "                    Text(",
      "                      ${2:user}['name']!,",
      "                      style: Theme.of(context).textTheme.headlineSmall,",
      "                    ),",
      "                    const SizedBox(height: 4),",
      "                    Text(",
      "                      ${2:user}['email']!,",
      "                      style: Theme.of(context).textTheme.bodyMedium?.copyWith(",
      "                        color: Theme.of(context).colorScheme.onSurfaceVariant,",
      "                      ),",
      "                    ),",
      "                  ],",
      "                ),",
      "              ),",
      "            ),",
      "            const SizedBox(height: 16),",
      "            ",
      "            // Profile Information",
      "            Card(",
      "              child: Column(",
      "                children: [",
      "                  ListTile(",
      "                    leading: const Icon(Icons.phone_outlined),",
      "                    title: const Text('Phone'),",
      "                    subtitle: Text(${2:user}['phone']!),",
      "                    trailing: const Icon(Icons.arrow_forward_ios),",
      "                    onTap: () {",
      "                      ${9:// Handle phone edit}",
      "                    },",
      "                  ),",
      "                  const Divider(height: 1),",
      "                  ListTile(",
      "                    leading: const Icon(Icons.location_on_outlined),",
      "                    title: const Text('Location'),",
      "                    subtitle: Text(${2:user}['location']!),",
      "                    trailing: const Icon(Icons.arrow_forward_ios),",
      "                    onTap: () {",
      "                      ${10:// Handle location edit}",
      "                    },",
      "                  ),",
      "                ],",
      "              ),",
      "            ),",
      "            const SizedBox(height: 16),",
      "            ",
      "            // Settings Section",
      "            Card(",
      "              child: Column(",
      "                children: [",
      "                  ListTile(",
      "                    leading: const Icon(Icons.notifications_outlined),",
      "                    title: const Text('Notifications'),",
      "                    trailing: const Icon(Icons.arrow_forward_ios),",
      "                    onTap: () {",
      "                      ${11:// Handle notifications settings}",
      "                    },",
      "                  ),",
      "                  const Divider(height: 1),",
      "                  ListTile(",
      "                    leading: const Icon(Icons.security_outlined),",
      "                    title: const Text('Privacy & Security'),",
      "                    trailing: const Icon(Icons.arrow_forward_ios),",
      "                    onTap: () {",
      "                      ${12:// Handle privacy settings}",
      "                    },",
      "                  ),",
      "                  const Divider(height: 1),",
      "                  ListTile(",
      "                    leading: const Icon(Icons.dark_mode_outlined),",
      "                    title: const Text('Dark Mode'),",
      "                    trailing: Switch(",
      "                      value: Theme.of(context).brightness == Brightness.dark,",
      "                      onChanged: (value) {",
      "                        ${13:// Handle theme change}",
      "                      },",
      "                    ),",
      "                  ),",
      "                ],",
      "              ),",
      "            ),",
      "            const SizedBox(height: 16),",
      "            ",
      "            // Action Buttons",
      "            Card(",
      "              child: Column(",
      "                children: [",
      "                  ListTile(",
      "                    leading: const Icon(Icons.help_outline),",
      "                    title: const Text('Help & Support'),",
      "                    trailing: const Icon(Icons.arrow_forward_ios),",
      "                    onTap: () {",
      "                      ${14:// Handle help}",
      "                    },",
      "                  ),",
      "                  const Divider(height: 1),",
      "                  ListTile(",
      "                    leading: const Icon(Icons.info_outline),",
      "                    title: const Text('About'),",
      "                    trailing: const Icon(Icons.arrow_forward_ios),",
      "                    onTap: () {",
      "                      ${15:// Handle about}",
      "                    },",
      "                  ),",
      "                  const Divider(height: 1),",
      "                  ListTile(",
      "                    leading: Icon(",
      "                      Icons.logout,",
      "                      color: Theme.of(context).colorScheme.error,",
      "                    ),",
      "                    title: Text(",
      "                      'Sign Out',",
      "                      style: TextStyle(",
      "                        color: Theme.of(context).colorScheme.error,",
      "                      ),",
      "                    ),",
      "                    onTap: () {",
      "                      ${16:// Handle sign out}",
      "                      showDialog(",
      "                        context: context,",
      "                        builder: (context) => AlertDialog(",
      "                          title: const Text('Sign Out'),",
      "                          content: const Text('Are you sure you want to sign out?'),",
      "                          actions: [",
      "                            TextButton(",
      "                              onPressed: () => Navigator.of(context).pop(),",
      "                              child: const Text('Cancel'),",
      "                            ),",
      "                            FilledButton(",
      "                              onPressed: () {",
      "                                Navigator.of(context).pop();",
      "                                // Implement sign out logic",
      "                              },",
      "                              child: const Text('Sign Out'),",
      "                            ),",
      "                          ],",
      "                        ),",
      "                      );",
      "                    },",
      "                  ),",
      "                ],",
      "              ),",
      "            ),",
      "            const SizedBox(height: 32),",
      "          ],",
      "        ),",
      "      ),",
      "    );",
      "  }",
      "}$0"
    ]
  },

  "Settings Page": {
    "prefix": "flp-settings",
    "description": "Complete settings page with sections",
    "body": [
      "import 'package:flutter/material.dart';",
      "",
      "class ${1:SettingsPage} extends StatefulWidget {",
      "  const ${1:SettingsPage}({super.key});",
      "",
      "  @override",
      "  State<${1:SettingsPage}> createState() => _${1:SettingsPage}State();",
      "}",
      "",
      "class _${1:SettingsPage}State extends State<${1:SettingsPage}> {",
      "  bool _notificationsEnabled = true;",
      "  bool _darkModeEnabled = false;",
      "  bool _biometricsEnabled = false;",
      "  double _fontSize = 16.0;",
      "",
      "  @override",
      "  Widget build(BuildContext context) {",
      "    return Scaffold(",
      "      appBar: AppBar(",
      "        title: const Text('Settings'),",
      "        backgroundColor: Theme.of(context).colorScheme.inversePrimary,",
      "      ),",
      "      body: ListView(",
      "        padding: const EdgeInsets.all(16),",
      "        children: [",
      "          // Appearance Section",
      "          _buildSectionHeader('Appearance'),",
      "          Card(",
      "            child: Column(",
      "              children: [",
      "                SwitchListTile(",
      "                  title: const Text('Dark Mode'),",
      "                  subtitle: const Text('Enable dark theme'),",
      "                  value: _darkModeEnabled,",
      "                  onChanged: (value) {",
      "                    setState(() {",
      "                      _darkModeEnabled = value;",
      "                    });",
      "                    ${2:// Handle theme change}",
      "                  },",
      "                  secondary: const Icon(Icons.dark_mode_outlined),",
      "                ),",
      "                const Divider(height: 1),",
      "                ListTile(",
      "                  title: const Text('Font Size'),",
      "                  subtitle: Text('Current: \\${_fontSize.toInt()}sp'),",
      "                  leading: const Icon(Icons.text_fields_outlined),",
      "                  trailing: SizedBox(",
      "                    width: 150,",
      "                    child: Slider(",
      "                      value: _fontSize,",
      "                      min: 12.0,",
      "                      max: 24.0,",
      "                      divisions: 6,",
      "                      onChanged: (value) {",
      "                        setState(() {",
      "                          _fontSize = value;",
      "                        });",
      "                      },",
      "                    ),",
      "                  ),",
      "                ),",
      "              ],",
      "            ),",
      "          ),",
      "          const SizedBox(height: 16),",
      "          ",
      "          // Notifications Section",
      "          _buildSectionHeader('Notifications'),",
      "          Card(",
      "            child: Column(",
      "              children: [",
      "                SwitchListTile(",
      "                  title: const Text('Push Notifications'),",
      "                  subtitle: const Text('Receive notifications on your device'),",
      "                  value: _notificationsEnabled,",
      "                  onChanged: (value) {",
      "                    setState(() {",
      "                      _notificationsEnabled = value;",
      "                    });",
      "                    ${3:// Handle notification settings}",
      "                  },",
      "                  secondary: const Icon(Icons.notifications_outlined),",
      "                ),",
      "                const Divider(height: 1),",
      "                ListTile(",
      "                  title: const Text('Email Notifications'),",
      "                  subtitle: const Text('Manage email preferences'),",
      "                  leading: const Icon(Icons.email_outlined),",
      "                  trailing: const Icon(Icons.arrow_forward_ios),",
      "                  onTap: () {",
      "                    ${4:// Navigate to email settings}",
      "                  },",
      "                ),",
      "              ],",
      "            ),",
      "          ),",
      "          const SizedBox(height: 16),",
      "          ",
      "          // Security Section",
      "          _buildSectionHeader('Security'),",
      "          Card(",
      "            child: Column(",
      "              children: [",
      "                SwitchListTile(",
      "                  title: const Text('Biometric Authentication'),",
      "                  subtitle: const Text('Use fingerprint or face ID'),",
      "                  value: _biometricsEnabled,",
      "                  onChanged: (value) {",
      "                    setState(() {",
      "                      _biometricsEnabled = value;",
      "                    });",
      "                    ${5:// Handle biometrics}",
      "                  },",
      "                  secondary: const Icon(Icons.fingerprint_outlined),",
      "                ),",
      "                const Divider(height: 1),",
      "                ListTile(",
      "                  title: const Text('Change Password'),",
      "                  subtitle: const Text('Update your account password'),",
      "                  leading: const Icon(Icons.lock_outlined),",
      "                  trailing: const Icon(Icons.arrow_forward_ios),",
      "                  onTap: () {",
      "                    ${6:// Navigate to change password}",
      "                  },",
      "                ),",
      "                const Divider(height: 1),",
      "                ListTile(",
      "                  title: const Text('Two-Factor Authentication'),",
      "                  subtitle: const Text('Add an extra layer of security'),",
      "                  leading: const Icon(Icons.security_outlined),",
      "                  trailing: const Icon(Icons.arrow_forward_ios),",
      "                  onTap: () {",
      "                    ${7:// Navigate to 2FA settings}",
      "                  },",
      "                ),",
      "              ],",
      "            ),",
      "          ),",
      "          const SizedBox(height: 16),",
      "          ",
      "          // Support Section",
      "          _buildSectionHeader('Support'),",
      "          Card(",
      "            child: Column(",
      "              children: [",
      "                ListTile(",
      "                  title: const Text('Help Center'),",
      "                  subtitle: const Text('Get help and support'),",
      "                  leading: const Icon(Icons.help_outline),",
      "                  trailing: const Icon(Icons.arrow_forward_ios),",
      "                  onTap: () {",
      "                    ${8:// Navigate to help center}",
      "                  },",
      "                ),",
      "                const Divider(height: 1),",
      "                ListTile(",
      "                  title: const Text('Contact Us'),",
      "                  subtitle: const Text('Send feedback or report issues'),",
      "                  leading: const Icon(Icons.contact_support_outlined),",
      "                  trailing: const Icon(Icons.arrow_forward_ios),",
      "                  onTap: () {",
      "                    ${9:// Navigate to contact form}",
      "                  },",
      "                ),",
      "                const Divider(height: 1),",
      "                ListTile(",
      "                  title: const Text('Privacy Policy'),",
      "                  subtitle: const Text('Read our privacy policy'),",
      "                  leading: const Icon(Icons.privacy_tip_outlined),",
      "                  trailing: const Icon(Icons.arrow_forward_ios),",
      "                  onTap: () {",
      "                    ${10:// Navigate to privacy policy}",
      "                  },",
      "                ),",
      "              ],",
      "            ),",
      "          ),",
      "          const SizedBox(height: 32),",
      "        ],",
      "      ),",
      "    );",
      "  }",
      "",
      "  Widget _buildSectionHeader(String title) {",
      "    return Padding(",
      "      padding: const EdgeInsets.fromLTRB(16, 16, 16, 8),",
      "      child: Text(",
      "        title,",
      "        style: Theme.of(context).textTheme.titleMedium?.copyWith(",
      "          color: Theme.of(context).colorScheme.primary,",
      "          fontWeight: FontWeight.bold,",
      "        ),",
      "      ),",
      "    );",
      "  }",
      "}$0"
    ]
  },

  "Dashboard Page": {
    "prefix": "flp-dashboard",
    "description": "Complete dashboard page with cards and charts",
    "body": [
      "import 'package:flutter/material.dart';",
      "",
      "class ${1:DashboardPage} extends StatefulWidget {",
      "  const ${1:DashboardPage}({super.key});",
      "",
      "  @override",
      "  State<${1:DashboardPage}> createState() => _${1:DashboardPage}State();",
      "}",
      "",
      "class _${1:DashboardPage}State extends State<${1:DashboardPage}> {",
      "  @override",
      "  Widget build(BuildContext context) {",
      "    return Scaffold(",
      "      appBar: AppBar(",
      "        title: const Text('Dashboard'),",
      "        backgroundColor: Theme.of(context).colorScheme.inversePrimary,",
      "        actions: [",
      "          IconButton(",
      "            onPressed: () {",
      "              ${2:// Handle refresh}",
      "            },",
      "            icon: const Icon(Icons.refresh),",
      "          ),",
      "        ],",
      "      ),",
      "      body: RefreshIndicator(",
      "        onRefresh: () async {",
      "          ${3:// Handle refresh}",
      "          await Future.delayed(const Duration(seconds: 1));",
      "        },",
      "        child: SingleChildScrollView(",
      "          padding: const EdgeInsets.all(16),",
      "          child: Column(",
      "            crossAxisAlignment: CrossAxisAlignment.start,",
      "            children: [",
      "              // Welcome Section",
      "              Text(",
      "                '${4:Welcome back!}',",
      "                style: Theme.of(context).textTheme.headlineMedium,",
      "              ),",
      "              const SizedBox(height: 8),",
      "              Text(",
      "                '${5:Here\\'s what\\'s happening today}',",
      "                style: Theme.of(context).textTheme.bodyLarge?.copyWith(",
      "                  color: Theme.of(context).colorScheme.onSurfaceVariant,",
      "                ),",
      "              ),",
      "              const SizedBox(height: 24),",
      "              ",
      "              // Statistics Cards",
      "              Row(",
      "                children: [",
      "                  Expanded(",
      "                    child: _buildStatCard(",
      "                      icon: Icons.trending_up,",
      "                      title: '${6:Revenue}',",
      "                      value: '${7:\\$12,345}',",
      "                      change: '+12%',",
      "                      isPositive: true,",
      "                    ),",
      "                  ),",
      "                  const SizedBox(width: 16),",
      "                  Expanded(",
      "                    child: _buildStatCard(",
      "                      icon: Icons.people_outline,",
      "                      title: '${8:Users}',",
      "                      value: '${9:1,234}',",
      "                      change: '+5%',",
      "                      isPositive: true,",
      "                    ),",
      "                  ),",
      "                ],",
      "              ),",
      "              const SizedBox(height: 16),",
      "              Row(",
      "                children: [",
      "                  Expanded(",
      "                    child: _buildStatCard(",
      "                      icon: Icons.shopping_cart_outlined,",
      "                      title: '${10:Orders}',",
      "                      value: '${11:456}',",
      "                      change: '-2%',",
      "                      isPositive: false,",
      "                    ),",
      "                  ),",
      "                  const SizedBox(width: 16),",
      "                  Expanded(",
      "                    child: _buildStatCard(",
      "                      icon: Icons.star_outline,",
      "                      title: '${12:Rating}',",
      "                      value: '${13:4.8}',",
      "                      change: '+0.1',",
      "                      isPositive: true,",
      "                    ),",
      "                  ),",
      "                ],",
      "              ),",
      "              const SizedBox(height: 32),",
      "              ",
      "              // Recent Activity Section",
      "              Text(",
      "                'Recent Activity',",
      "                style: Theme.of(context).textTheme.titleLarge,",
      "              ),",
      "              const SizedBox(height: 16),",
      "              Card(",
      "                child: Column(",
      "                  children: [",
      "                    ListTile(",
      "                      leading: CircleAvatar(",
      "                        backgroundColor: Theme.of(context).colorScheme.primaryContainer,",
      "                        child: Icon(",
      "                          Icons.shopping_bag_outlined,",
      "                          color: Theme.of(context).colorScheme.onPrimaryContainer,",
      "                        ),",
      "                      ),",
      "                      title: const Text('New order received'),",
      "                      subtitle: const Text('Order #12345 - \\$99.99'),",
      "                      trailing: const Text('2 min ago'),",
      "                    ),",
      "                    const Divider(height: 1),",
      "                    ListTile(",
      "                      leading: CircleAvatar(",
      "                        backgroundColor: Theme.of(context).colorScheme.secondaryContainer,",
      "                        child: Icon(",
      "                          Icons.person_add_outlined,",
      "                          color: Theme.of(context).colorScheme.onSecondaryContainer,",
      "                        ),",
      "                      ),",
      "                      title: const Text('New user registered'),",
      "                      subtitle: const Text('john.doe@example.com'),",
      "                      trailing: const Text('5 min ago'),",
      "                    ),",
      "                    const Divider(height: 1),",
      "                    ListTile(",
      "                      leading: CircleAvatar(",
      "                        backgroundColor: Theme.of(context).colorScheme.tertiaryContainer,",
      "                        child: Icon(",
      "                          Icons.star_outlined,",
      "                          color: Theme.of(context).colorScheme.onTertiaryContainer,",
      "                        ),",
      "                      ),",
      "                      title: const Text('New review received'),",
      "                      subtitle: const Text('5 stars - Great product!'),",
      "                      trailing: const Text('1 hour ago'),",
      "                    ),",
      "                  ],",
      "                ),",
      "              ),",
      "              const SizedBox(height: 32),",
      "            ],",
      "          ),",
      "        ),",
      "      ),",
      "    );",
      "  }",
      "",
      "  Widget _buildStatCard({",
      "    required IconData icon,",
      "    required String title,",
      "    required String value,",
      "    required String change,",
      "    required bool isPositive,",
      "  }) {",
      "    return Card(",
      "      child: Padding(",
      "        padding: const EdgeInsets.all(16),",
      "        child: Column(",
      "          crossAxisAlignment: CrossAxisAlignment.start,",
      "          children: [",
      "            Row(",
      "              children: [",
      "                Icon(",
      "                  icon,",
      "                  color: Theme.of(context).colorScheme.primary,",
      "                ),",
      "                const Spacer(),",
      "                Container(",
      "                  padding: const EdgeInsets.symmetric(",
      "                    horizontal: 8,",
      "                    vertical: 4,",
      "                  ),",
      "                  decoration: BoxDecoration(",
      "                    color: isPositive",
      "                        ? Colors.green.withOpacity(0.1)",
      "                        : Colors.red.withOpacity(0.1),",
      "                    borderRadius: BorderRadius.circular(12),",
      "                  ),",
      "                  child: Text(",
      "                    change,",
      "                    style: TextStyle(",
      "                      color: isPositive ? Colors.green : Colors.red,",
      "                      fontWeight: FontWeight.bold,",
      "                      fontSize: 12,",
      "                    ),",
      "                  ),",
      "                ),",
      "              ],",
      "            ),",
      "            const SizedBox(height: 8),",
      "            Text(",
      "              value,",
      "              style: Theme.of(context).textTheme.headlineSmall?.copyWith(",
      "                fontWeight: FontWeight.bold,",
      "              ),",
      "            ),",
      "            const SizedBox(height: 4),",
      "            Text(",
      "              title,",
      "              style: Theme.of(context).textTheme.bodyMedium?.copyWith(",
      "                color: Theme.of(context).colorScheme.onSurfaceVariant,",
      "              ),",
      "            ),",
      "          ],",
      "        ),",
      "      ),",
      "    );",
      "  }",
      "}$0"
    ]
  }
}
