{
  "Complete Home Page": {
    "prefix": "flp-home",
    "description": "Complete home page with Material 3 design",
    "body": [
      "import 'package:flutter/material.dart';",
      "",
      "class ${1:HomePage} extends StatefulWidget {",
      "  const ${1:HomePage}({super.key});",
      "",
      "  @override",
      "  State<${1:HomePage}> createState() => _${1:HomePage}State();",
      "}",
      "",
      "class _${1:HomePage}State extends State<${1:HomePage}> {",
      "  int _selectedIndex = 0;",
      "",
      "  final List<Widget> _pages = [",
      "    const ${2:DashboardPage}(),",
      "    const ${3:SearchPage}(),",
      "    const ${4:FavoritesPage}(),",
      "    const ${5:ProfilePage}(),",
      "  ];",
      "",
      "  @override",
      "  Widget build(BuildContext context) {",
      "    return Scaffold(",
      "      appBar: AppBar(",
      "        title: Text('${6:App Name}'),",
      "        backgroundColor: Theme.of(context).colorScheme.inversePrimary,",
      "        actions: [",
      "          IconButton(",
      "            onPressed: () {",
      "              ${7:// Handle notifications}",
      "            },",
      "            icon: const Icon(Icons.notifications_outlined),",
      "          ),",
      "          IconButton(",
      "            onPressed: () {",
      "              ${8:// Handle settings}",
      "            },",
      "            icon: const Icon(Icons.settings_outlined),",
      "          ),",
      "        ],",
      "      ),",
      "      body: IndexedStack(",
      "        index: _selectedIndex,",
      "        children: _pages,",
      "      ),",
      "      bottomNavigationBar: NavigationBar(",
      "        selectedIndex: _selectedIndex,",
      "        onDestinationSelected: (index) {",
      "          setState(() {",
      "            _selectedIndex = index;",
      "          });",
      "        },",
      "        destinations: const [",
      "          NavigationDestination(",
      "            icon: Icon(Icons.home_outlined),",
      "            selectedIcon: Icon(Icons.home),",
      "            label: 'Home',",
      "          ),",
      "          NavigationDestination(",
      "            icon: Icon(Icons.search_outlined),",
      "            selectedIcon: Icon(Icons.search),",
      "            label: 'Search',",
      "          ),",
      "          NavigationDestination(",
      "            icon: Icon(Icons.favorite_outline),",
      "            selectedIcon: Icon(Icons.favorite),",
      "            label: 'Favorites',",
      "          ),",
      "          NavigationDestination(",
      "            icon: Icon(Icons.person_outline),",
      "            selectedIcon: Icon(Icons.person),",
      "            label: 'Profile',",
      "          ),",
      "        ],",
      "      ),",
      "    );",
      "  }",
      "}$0"
    ]
  },

  "Login Page": {
    "prefix": "flp-login",
    "description": "Complete login page with form validation",
    "body": [
      "import 'package:flutter/material.dart';",
      "",
      "class ${1:LoginPage} extends StatefulWidget {",
      "  const ${1:LoginPage}({super.key});",
      "",
      "  @override",
      "  State<${1:LoginPage}> createState() => _${1:LoginPage}State();",
      "}",
      "",
      "class _${1:LoginPage}State extends State<${1:LoginPage}> {",
      "  final _formKey = GlobalKey<FormState>();",
      "  final _emailController = TextEditingController();",
      "  final _passwordController = TextEditingController();",
      "  bool _obscurePassword = true;",
      "  bool _isLoading = false;",
      "",
      "  @override",
      "  void dispose() {",
      "    _emailController.dispose();",
      "    _passwordController.dispose();",
      "    super.dispose();",
      "  }",
      "",
      "  Future<void> _handleLogin() async {",
      "    if (_formKey.currentState!.validate()) {",
      "      setState(() {",
      "        _isLoading = true;",
      "      });",
      "",
      "      try {",
      "        ${2:// Implement login logic}",
      "        await Future.delayed(const Duration(seconds: 2));",
      "        ",
      "        if (mounted) {",
      "          ${3:// Navigate to home page}",
      "          Navigator.of(context).pushReplacementNamed('/home');",
      "        }",
      "      } catch (e) {",
      "        if (mounted) {",
      "          ScaffoldMessenger.of(context).showSnackBar(",
      "            SnackBar(",
      "              content: Text('Login failed: \\${e.toString()}'),",
      "              backgroundColor: Theme.of(context).colorScheme.error,",
      "            ),",
      "          );",
      "        }",
      "      } finally {",
      "        if (mounted) {",
      "          setState(() {",
      "            _isLoading = false;",
      "          });",
      "        }",
      "      }",
      "    }",
      "  }",
      "",
      "  @override",
      "  Widget build(BuildContext context) {",
      "    return Scaffold(",
      "      body: SafeArea(",
      "        child: Padding(",
      "          padding: const EdgeInsets.all(24.0),",
      "          child: Form(",
      "            key: _formKey,",
      "            child: Column(",
      "              mainAxisAlignment: MainAxisAlignment.center,",
      "              crossAxisAlignment: CrossAxisAlignment.stretch,",
      "              children: [",
      "                Icon(",
      "                  Icons.${4:lock_outline},",
      "                  size: 80,",
      "                  color: Theme.of(context).colorScheme.primary,",
      "                ),",
      "                const SizedBox(height: 32),",
      "                Text(",
      "                  '${5:Welcome Back}',",
      "                  style: Theme.of(context).textTheme.headlineMedium,",
      "                  textAlign: TextAlign.center,",
      "                ),",
      "                const SizedBox(height: 8),",
      "                Text(",
      "                  '${6:Please sign in to your account}',",
      "                  style: Theme.of(context).textTheme.bodyLarge?.copyWith(",
      "                    color: Theme.of(context).colorScheme.onSurfaceVariant,",
      "                  ),",
      "                  textAlign: TextAlign.center,",
      "                ),",
      "                const SizedBox(height: 48),",
      "                TextFormField(",
      "                  controller: _emailController,",
      "                  keyboardType: TextInputType.emailAddress,",
      "                  decoration: const InputDecoration(",
      "                    labelText: 'Email',",
      "                    prefixIcon: Icon(Icons.email_outlined),",
      "                    border: OutlineInputBorder(),",
      "                  ),",
      "                  validator: (value) {",
      "                    if (value == null || value.isEmpty) {",
      "                      return 'Please enter your email';",
      "                    }",
      "                    if (!RegExp(r'^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}\\$').hasMatch(value)) {",
      "                      return 'Please enter a valid email';",
      "                    }",
      "                    return null;",
      "                  },",
      "                ),",
      "                const SizedBox(height: 16),",
      "                TextFormField(",
      "                  controller: _passwordController,",
      "                  obscureText: _obscurePassword,",
      "                  decoration: InputDecoration(",
      "                    labelText: 'Password',",
      "                    prefixIcon: const Icon(Icons.lock_outlined),",
      "                    suffixIcon: IconButton(",
      "                      onPressed: () {",
      "                        setState(() {",
      "                          _obscurePassword = !_obscurePassword;",
      "                        });",
      "                      },",
      "                      icon: Icon(",
      "                        _obscurePassword",
      "                            ? Icons.visibility_outlined",
      "                            : Icons.visibility_off_outlined,",
      "                      ),",
      "                    ),",
      "                    border: const OutlineInputBorder(),",
      "                  ),",
      "                  validator: (value) {",
      "                    if (value == null || value.isEmpty) {",
      "                      return 'Please enter your password';",
      "                    }",
      "                    if (value.length < 6) {",
      "                      return 'Password must be at least 6 characters';",
      "                    }",
      "                    return null;",
      "                  },",
      "                ),",
      "                const SizedBox(height: 24),",
      "                FilledButton(",
      "                  onPressed: _isLoading ? null : _handleLogin,",
      "                  child: _isLoading",
      "                      ? const SizedBox(",
      "                          height: 20,",
      "                          width: 20,",
      "                          child: CircularProgressIndicator(",
      "                            strokeWidth: 2,",
      "                          ),",
      "                        )",
      "                      : const Text('Sign In'),",
      "                ),",
      "                const SizedBox(height: 16),",
      "                TextButton(",
      "                  onPressed: () {",
      "                    ${7:// Handle forgot password}",
      "                  },",
      "                  child: const Text('Forgot Password?'),",
      "                ),",
      "                const SizedBox(height: 32),",
      "                Row(",
      "                  mainAxisAlignment: MainAxisAlignment.center,",
      "                  children: [",
      "                    Text(",
      "                      \"Don't have an account? \",",
      "                      style: Theme.of(context).textTheme.bodyMedium,",
      "                    ),",
      "                    TextButton(",
      "                      onPressed: () {",
      "                        ${8:// Navigate to register page}",
      "                      },",
      "                      child: const Text('Sign Up'),",
      "                    ),",
      "                  ],",
      "                ),",
      "              ],",
      "            ),",
      "          ),",
      "        ),",
      "      ),",
      "    );",
      "  }",
      "}$0"
    ]
  },

  "Profile Page": {
    "prefix": "flp-profile",
    "description": "Complete profile page with user settings",
    "body": [
      "import 'package:flutter/material.dart';",
      "",
      "class ${1:ProfilePage} extends StatefulWidget {",
      "  const ${1:ProfilePage}({super.key});",
      "",
      "  @override",
      "  State<${1:ProfilePage}> createState() => _${1:ProfilePage}State();",
      "}",
      "",
      "class _${1:ProfilePage}State extends State<${1:ProfilePage}> {",
      "  final ${2:user} = {",
      "    'name': '${3:John Doe}',",
      "    'email': '${4:john.doe@example.com}',",
      "    'avatar': '${5:https://example.com/avatar.jpg}',",
      "    'phone': '${6:+1 234 567 8900}',",
      "    'location': '${7:New York, USA}',",
      "  };",
      "",
      "  @override",
      "  Widget build(BuildContext context) {",
      "    return Scaffold(",
      "      appBar: AppBar(",
      "        title: const Text('Profile'),",
      "        backgroundColor: Theme.of(context).colorScheme.inversePrimary,",
      "        actions: [",
      "          IconButton(",
      "            onPressed: () {",
      "              ${8:// Handle edit profile}",
      "            },",
      "            icon: const Icon(Icons.edit_outlined),",
      "          ),",
      "        ],",
      "      ),",
      "      body: SingleChildScrollView(",
      "        padding: const EdgeInsets.all(16),",
      "        child: Column(",
      "          children: [",
      "            // Profile Header",
      "            Card(",
      "              child: Padding(",
      "                padding: const EdgeInsets.all(24),",
      "                child: Column(",
      "                  children: [",
      "                    CircleAvatar(",
      "                      radius: 50,",
      "                      backgroundColor: Theme.of(context).colorScheme.primary,",
      "                      child: ${2:user}['avatar'] != null",
      "                          ? ClipRRect(",
      "                              borderRadius: BorderRadius.circular(50),",
      "                              child: Image.network(",
      "                                ${2:user}['avatar']!,",
      "                                fit: BoxFit.cover,",
      "                              ),",
      "                            )",
      "                          : Text(",
      "                              ${2:user}['name']![0].toUpperCase(),",
      "                              style: TextStyle(",
      "                                fontSize: 32,",
      "                                color: Theme.of(context).colorScheme.onPrimary,",
      "                              ),",
      "                            ),",
      "                    ),",
      "                    const SizedBox(height: 16),",
      "                    Text(",
      "                      ${2:user}['name']!,",
      "                      style: Theme.of(context).textTheme.headlineSmall,",
      "                    ),",
      "                    const SizedBox(height: 4),",
      "                    Text(",
      "                      ${2:user}['email']!,",
      "                      style: Theme.of(context).textTheme.bodyMedium?.copyWith(",
      "                        color: Theme.of(context).colorScheme.onSurfaceVariant,",
      "                      ),",
      "                    ),",
      "                  ],",
      "                ),",
      "              ),",
      "            ),",
      "            const SizedBox(height: 16),",
      "            ",
      "            // Profile Information",
      "            Card(",
      "              child: Column(",
      "                children: [",
      "                  ListTile(",
      "                    leading: const Icon(Icons.phone_outlined),",
      "                    title: const Text('Phone'),",
      "                    subtitle: Text(${2:user}['phone']!),",
      "                    trailing: const Icon(Icons.arrow_forward_ios),",
      "                    onTap: () {",
      "                      ${9:// Handle phone edit}",
      "                    },",
      "                  ),",
      "                  const Divider(height: 1),",
      "                  ListTile(",
      "                    leading: const Icon(Icons.location_on_outlined),",
      "                    title: const Text('Location'),",
      "                    subtitle: Text(${2:user}['location']!),",
      "                    trailing: const Icon(Icons.arrow_forward_ios),",
      "                    onTap: () {",
      "                      ${10:// Handle location edit}",
      "                    },",
      "                  ),",
      "                ],",
      "              ),",
      "            ),",
      "            const SizedBox(height: 16),",
      "            ",
      "            // Settings Section",
      "            Card(",
      "              child: Column(",
      "                children: [",
      "                  ListTile(",
      "                    leading: const Icon(Icons.notifications_outlined),",
      "                    title: const Text('Notifications'),",
      "                    trailing: const Icon(Icons.arrow_forward_ios),",
      "                    onTap: () {",
      "                      ${11:// Handle notifications settings}",
      "                    },",
      "                  ),",
      "                  const Divider(height: 1),",
      "                  ListTile(",
      "                    leading: const Icon(Icons.security_outlined),",
      "                    title: const Text('Privacy & Security'),",
      "                    trailing: const Icon(Icons.arrow_forward_ios),",
      "                    onTap: () {",
      "                      ${12:// Handle privacy settings}",
      "                    },",
      "                  ),",
      "                  const Divider(height: 1),",
      "                  ListTile(",
      "                    leading: const Icon(Icons.dark_mode_outlined),",
      "                    title: const Text('Dark Mode'),",
      "                    trailing: Switch(",
      "                      value: Theme.of(context).brightness == Brightness.dark,",
      "                      onChanged: (value) {",
      "                        ${13:// Handle theme change}",
      "                      },",
      "                    ),",
      "                  ),",
      "                ],",
      "              ),",
      "            ),",
      "            const SizedBox(height: 16),",
      "            ",
      "            // Action Buttons",
      "            Card(",
      "              child: Column(",
      "                children: [",
      "                  ListTile(",
      "                    leading: const Icon(Icons.help_outline),",
      "                    title: const Text('Help & Support'),",
      "                    trailing: const Icon(Icons.arrow_forward_ios),",
      "                    onTap: () {",
      "                      ${14:// Handle help}",
      "                    },",
      "                  ),",
      "                  const Divider(height: 1),",
      "                  ListTile(",
      "                    leading: const Icon(Icons.info_outline),",
      "                    title: const Text('About'),",
      "                    trailing: const Icon(Icons.arrow_forward_ios),",
      "                    onTap: () {",
      "                      ${15:// Handle about}",
      "                    },",
      "                  ),",
      "                  const Divider(height: 1),",
      "                  ListTile(",
      "                    leading: Icon(",
      "                      Icons.logout,",
      "                      color: Theme.of(context).colorScheme.error,",
      "                    ),",
      "                    title: Text(",
      "                      'Sign Out',",
      "                      style: TextStyle(",
      "                        color: Theme.of(context).colorScheme.error,",
      "                      ),",
      "                    ),",
      "                    onTap: () {",
      "                      ${16:// Handle sign out}",
      "                      showDialog(",
      "                        context: context,",
      "                        builder: (context) => AlertDialog(",
      "                          title: const Text('Sign Out'),",
      "                          content: const Text('Are you sure you want to sign out?'),",
      "                          actions: [",
      "                            TextButton(",
      "                              onPressed: () => Navigator.of(context).pop(),",
      "                              child: const Text('Cancel'),",
      "                            ),",
      "                            FilledButton(",
      "                              onPressed: () {",
      "                                Navigator.of(context).pop();",
      "                                // Implement sign out logic",
      "                              },",
      "                              child: const Text('Sign Out'),",
      "                            ),",
      "                          ],",
      "                        ),",
      "                      );",
      "                    },",
      "                  ),",
      "                ],",
      "              ),",
      "            ),",
      "            const SizedBox(height: 32),",
      "          ],",
      "        ),",
      "      ),",
      "    );",
      "  }",
      "}$0"
    ]
  },

  "Settings Page": {
    "prefix": "flp-settings",
    "description": "Complete settings page with sections",
    "body": [
      "import 'package:flutter/material.dart';",
      "",
      "class ${1:SettingsPage} extends StatefulWidget {",
      "  const ${1:SettingsPage}({super.key});",
      "",
      "  @override",
      "  State<${1:SettingsPage}> createState() => _${1:SettingsPage}State();",
      "}",
      "",
      "class _${1:SettingsPage}State extends State<${1:SettingsPage}> {",
      "  bool _notificationsEnabled = true;",
      "  bool _darkModeEnabled = false;",
      "  bool _biometricsEnabled = false;",
      "  double _fontSize = 16.0;",
      "",
      "  @override",
      "  Widget build(BuildContext context) {",
      "    return Scaffold(",
      "      appBar: AppBar(",
      "        title: const Text('Settings'),",
      "        backgroundColor: Theme.of(context).colorScheme.inversePrimary,",
      "      ),",
      "      body: ListView(",
      "        padding: const EdgeInsets.all(16),",
      "        children: [",
      "          // Appearance Section",
      "          _buildSectionHeader('Appearance'),",
      "          Card(",
      "            child: Column(",
      "              children: [",
      "                SwitchListTile(",
      "                  title: const Text('Dark Mode'),",
      "                  subtitle: const Text('Enable dark theme'),",
      "                  value: _darkModeEnabled,",
      "                  onChanged: (value) {",
      "                    setState(() {",
      "                      _darkModeEnabled = value;",
      "                    });",
      "                    ${2:// Handle theme change}",
      "                  },",
      "                  secondary: const Icon(Icons.dark_mode_outlined),",
      "                ),",
      "                const Divider(height: 1),",
      "                ListTile(",
      "                  title: const Text('Font Size'),",
      "                  subtitle: Text('Current: \\${_fontSize.toInt()}sp'),",
      "                  leading: const Icon(Icons.text_fields_outlined),",
      "                  trailing: SizedBox(",
      "                    width: 150,",
      "                    child: Slider(",
      "                      value: _fontSize,",
      "                      min: 12.0,",
      "                      max: 24.0,",
      "                      divisions: 6,",
      "                      onChanged: (value) {",
      "                        setState(() {",
      "                          _fontSize = value;",
      "                        });",
      "                      },",
      "                    ),",
      "                  ),",
      "                ),",
      "              ],",
      "            ),",
      "          ),",
      "          const SizedBox(height: 16),",
      "          ",
      "          // Notifications Section",
      "          _buildSectionHeader('Notifications'),",
      "          Card(",
      "            child: Column(",
      "              children: [",
      "                SwitchListTile(",
      "                  title: const Text('Push Notifications'),",
      "                  subtitle: const Text('Receive notifications on your device'),",
      "                  value: _notificationsEnabled,",
      "                  onChanged: (value) {",
      "                    setState(() {",
      "                      _notificationsEnabled = value;",
      "                    });",
      "                    ${3:// Handle notification settings}",
      "                  },",
      "                  secondary: const Icon(Icons.notifications_outlined),",
      "                ),",
      "                const Divider(height: 1),",
      "                ListTile(",
      "                  title: const Text('Email Notifications'),",
      "                  subtitle: const Text('Manage email preferences'),",
      "                  leading: const Icon(Icons.email_outlined),",
      "                  trailing: const Icon(Icons.arrow_forward_ios),",
      "                  onTap: () {",
      "                    ${4:// Navigate to email settings}",
      "                  },",
      "                ),",
      "              ],",
      "            ),",
      "          ),",
      "          const SizedBox(height: 16),",
      "          ",
      "          // Security Section",
      "          _buildSectionHeader('Security'),",
      "          Card(",
      "            child: Column(",
      "              children: [",
      "                SwitchListTile(",
      "                  title: const Text('Biometric Authentication'),",
      "                  subtitle: const Text('Use fingerprint or face ID'),",
      "                  value: _biometricsEnabled,",
      "                  onChanged: (value) {",
      "                    setState(() {",
      "                      _biometricsEnabled = value;",
      "                    });",
      "                    ${5:// Handle biometrics}",
      "                  },",
      "                  secondary: const Icon(Icons.fingerprint_outlined),",
      "                ),",
      "                const Divider(height: 1),",
      "                ListTile(",
      "                  title: const Text('Change Password'),",
      "                  subtitle: const Text('Update your account password'),",
      "                  leading: const Icon(Icons.lock_outlined),",
      "                  trailing: const Icon(Icons.arrow_forward_ios),",
      "                  onTap: () {",
      "                    ${6:// Navigate to change password}",
      "                  },",
      "                ),",
      "                const Divider(height: 1),",
      "                ListTile(",
      "                  title: const Text('Two-Factor Authentication'),",
      "                  subtitle: const Text('Add an extra layer of security'),",
      "                  leading: const Icon(Icons.security_outlined),",
      "                  trailing: const Icon(Icons.arrow_forward_ios),",
      "                  onTap: () {",
      "                    ${7:// Navigate to 2FA settings}",
      "                  },",
      "                ),",
      "              ],",
      "            ),",
      "          ),",
      "          const SizedBox(height: 16),",
      "          ",
      "          // Support Section",
      "          _buildSectionHeader('Support'),",
      "          Card(",
      "            child: Column(",
      "              children: [",
      "                ListTile(",
      "                  title: const Text('Help Center'),",
      "                  subtitle: const Text('Get help and support'),",
      "                  leading: const Icon(Icons.help_outline),",
      "                  trailing: const Icon(Icons.arrow_forward_ios),",
      "                  onTap: () {",
      "                    ${8:// Navigate to help center}",
      "                  },",
      "                ),",
      "                const Divider(height: 1),",
      "                ListTile(",
      "                  title: const Text('Contact Us'),",
      "                  subtitle: const Text('Send feedback or report issues'),",
      "                  leading: const Icon(Icons.contact_support_outlined),",
      "                  trailing: const Icon(Icons.arrow_forward_ios),",
      "                  onTap: () {",
      "                    ${9:// Navigate to contact form}",
      "                  },",
      "                ),",
      "                const Divider(height: 1),",
      "                ListTile(",
      "                  title: const Text('Privacy Policy'),",
      "                  subtitle: const Text('Read our privacy policy'),",
      "                  leading: const Icon(Icons.privacy_tip_outlined),",
      "                  trailing: const Icon(Icons.arrow_forward_ios),",
      "                  onTap: () {",
      "                    ${10:// Navigate to privacy policy}",
      "                  },",
      "                ),",
      "              ],",
      "            ),",
      "          ),",
      "          const SizedBox(height: 32),",
      "        ],",
      "      ),",
      "    );",
      "  }",
      "",
      "  Widget _buildSectionHeader(String title) {",
      "    return Padding(",
      "      padding: const EdgeInsets.fromLTRB(16, 16, 16, 8),",
      "      child: Text(",
      "        title,",
      "        style: Theme.of(context).textTheme.titleMedium?.copyWith(",
      "          color: Theme.of(context).colorScheme.primary,",
      "          fontWeight: FontWeight.bold,",
      "        ),",
      "      ),",
      "    );",
      "  }",
      "}$0"
    ]
  },

  "Dashboard Page": {
    "prefix": "flp-dashboard",
    "description": "Complete dashboard page with cards and charts",
    "body": [
      "import 'package:flutter/material.dart';",
      "",
      "class ${1:DashboardPage} extends StatefulWidget {",
      "  const ${1:DashboardPage}({super.key});",
      "",
      "  @override",
      "  State<${1:DashboardPage}> createState() => _${1:DashboardPage}State();",
      "}",
      "",
      "class _${1:DashboardPage}State extends State<${1:DashboardPage}> {",
      "  bool _isLoading = false;",
      "  ",
      "  final List<Map<String, dynamic>> _stats = [",
      "    {",
      "      'title': 'Total Sales',",
      "      'value': '\\$45,678',",
      "      'change': '+12.5%',",
      "      'isPositive': true,",
      "      'icon': Icons.trending_up,",
      "      'color': Colors.green,",
      "    },",
      "    {",
      "      'title': 'New Users',",
      "      'value': '1,234',",
      "      'change': '+8.2%',",
      "      'isPositive': true,",
      "      'icon': Icons.person_add,",
      "      'color': Colors.blue,",
      "    },",
      "    {",
      "      'title': 'Orders',",
      "      'value': '567',",
      "      'change': '-2.1%',",
      "      'isPositive': false,",
      "      'icon': Icons.shopping_cart,",
      "      'color': Colors.orange,",
      "    },",
      "    {",
      "      'title': 'Revenue',",
      "      'value': '\\$23,456',",
      "      'change': '+15.3%',",
      "      'isPositive': true,",
      "      'icon': Icons.attach_money,",
      "      'color': Colors.purple,",
      "    },",
      "  ];",
      "",
      "  Future<void> _refreshData() async {",
      "    setState(() {",
      "      _isLoading = true;",
      "    });",
      "    ",
      "    // Simulate API call",
      "    await Future.delayed(const Duration(seconds: 2));",
      "    ",
      "    if (mounted) {",
      "      setState(() {",
      "        _isLoading = false;",
      "      });",
      "    }",
      "  }",
      "",
      "  @override",
      "  Widget build(BuildContext context) {",
      "    return Scaffold(",
      "      appBar: AppBar(",
      "        title: Column(",
      "          crossAxisAlignment: CrossAxisAlignment.start,",
      "          children: [",
      "            const Text('${2:Dashboard}'),",
      "            Text(",
      "              'Last updated: \\${DateTime.now().hour}:\\${DateTime.now().minute.toString().padLeft(2, '0')}',",
      "              style: Theme.of(context).textTheme.bodySmall,",
      "            ),",
      "          ],",
      "        ),",
      "        backgroundColor: Theme.of(context).colorScheme.surface,",
      "        elevation: 0,",
      "        actions: [",
      "          IconButton(",
      "            onPressed: _isLoading ? null : _refreshData,",
      "            icon: _isLoading",
      "                ? const SizedBox(",
      "                    width: 20,",
      "                    height: 20,",
      "                    child: CircularProgressIndicator(strokeWidth: 2),",
      "                  )",
      "                : const Icon(Icons.refresh),",
      "          ),",
      "          PopupMenuButton<String>(",
      "            onSelected: (value) {",
      "              ${3:// Handle menu selection}",
      "            },",
      "            itemBuilder: (context) => [",
      "              const PopupMenuItem(",
      "                value: 'export',",
      "                child: ListTile(",
      "                  leading: Icon(Icons.download),",
      "                  title: Text('Export Data'),",
      "                ),",
      "              ),",
      "              const PopupMenuItem(",
      "                value: 'settings',",
      "                child: ListTile(",
      "                  leading: Icon(Icons.settings),",
      "                  title: Text('Settings'),",
      "                ),",
      "              ),",
      "            ],",
      "          ),",
      "        ],",
      "      ),",
      "      body: RefreshIndicator(",
      "        onRefresh: _refreshData,",
      "        child: SingleChildScrollView(",
      "          physics: const AlwaysScrollableScrollPhysics(),",
      "          padding: const EdgeInsets.all(16),",
      "          child: Column(",
      "            crossAxisAlignment: CrossAxisAlignment.start,",
      "            children: [",
      "              // Quick Stats Grid",
      "              Text(",
      "                'Overview',",
      "                style: Theme.of(context).textTheme.headlineSmall?.copyWith(",
      "                  fontWeight: FontWeight.bold,",
      "                ),",
      "              ),",
      "              const SizedBox(height: 16),",
      "              GridView.builder(",
      "                shrinkWrap: true,",
      "                physics: const NeverScrollableScrollPhysics(),",
      "                gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(",
      "                  crossAxisCount: 2,",
      "                  crossAxisSpacing: 16,",
      "                  mainAxisSpacing: 16,",
      "                  childAspectRatio: 1.2,",
      "                ),",
      "                itemCount: _stats.length,",
      "                itemBuilder: (context, index) {",
      "                  final stat = _stats[index];",
      "                  return Card(",
      "                    elevation: 2,",
      "                    child: Padding(",
      "                      padding: const EdgeInsets.all(16),",
      "                      child: Column(",
      "                        crossAxisAlignment: CrossAxisAlignment.start,",
      "                        children: [",
      "                          Row(",
      "                            children: [",
      "                              Container(",
      "                                padding: const EdgeInsets.all(8),",
      "                                decoration: BoxDecoration(",
      "                                  color: stat['color'].withOpacity(0.1),",
      "                                  borderRadius: BorderRadius.circular(8),",
      "                                ),",
      "                                child: Icon(",
      "                                  stat['icon'],",
      "                                  color: stat['color'],",
      "                                  size: 20,",
      "                                ),",
      "                              ),",
      "                              const Spacer(),",
      "                              Container(",
      "                                padding: const EdgeInsets.symmetric(",
      "                                  horizontal: 6,",
      "                                  vertical: 2,",
      "                                ),",
      "                                decoration: BoxDecoration(",
      "                                  color: stat['isPositive']",
      "                                      ? Colors.green.withOpacity(0.1)",
      "                                      : Colors.red.withOpacity(0.1),",
      "                                  borderRadius: BorderRadius.circular(4),",
      "                                ),",
      "                                child: Text(",
      "                                  stat['change'],",
      "                                  style: TextStyle(",
      "                                    color: stat['isPositive']",
      "                                        ? Colors.green",
      "                                        : Colors.red,",
      "                                    fontSize: 12,",
      "                                    fontWeight: FontWeight.bold,",
      "                                  ),",
      "                                ),",
      "                              ),",
      "                            ],",
      "                          ),",
      "                          const SizedBox(height: 12),",
      "                          Text(",
      "                            stat['value'],",
      "                            style: Theme.of(context).textTheme.headlineMedium?.copyWith(",
      "                              fontWeight: FontWeight.bold,",
      "                            ),",
      "                          ),",
      "                          Text(",
      "                            stat['title'],",
      "                            style: Theme.of(context).textTheme.bodyMedium?.copyWith(",
      "                              color: Theme.of(context).colorScheme.onSurface.withOpacity(0.7),",
      "                            ),",
      "                          ),",
      "                        ],",
      "                      ),",
      "                    ),",
      "                  );",
      "                },",
      "              ),",
      "              const SizedBox(height: 32),",
      "              ",
      "              // Recent Activity",
      "              Text(",
      "                'Recent Activity',",
      "                style: Theme.of(context).textTheme.headlineSmall?.copyWith(",
      "                  fontWeight: FontWeight.bold,",
      "                ),",
      "              ),",
      "              const SizedBox(height: 16),",
      "              Card(",
      "                child: Column(",
      "                  children: List.generate(",
      "                    3,",
      "                    (index) => ListTile(",
      "                      leading: CircleAvatar(",
      "                        backgroundColor:",
      "                            Theme.of(context).colorScheme.primaryContainer,",
      "                        child: Icon(",
      "                          Icons.shopping_bag,",
      "                          color:",
      "                              Theme.of(context).colorScheme.onPrimaryContainer,",
      "                        ),",
      "                      ),",
      "                      title: Text('Order #\\${1000 + index}'),",
      "                      subtitle: Text('Customer \\${index + 1} • Just now'),",
      "                      trailing: Text(",
      "                        '\\$\\${(index + 1) * 45}.00',",
      "                        style: const TextStyle(fontWeight: FontWeight.bold),",
      "                      ),",
      "                      onTap: () {",
      "                        ${4:// Handle activity tap}",
      "                      },",
      "                    ),",
      "                  ),",
      "                ),",
      "              ),",
      "              const SizedBox(height: 32),",
      "              ",
      "              // Quick Actions",
      "              Text(",
      "                'Quick Actions',",
      "                style: Theme.of(context).textTheme.headlineSmall?.copyWith(",
      "                  fontWeight: FontWeight.bold,",
      "                ),",
      "              ),",
      "              const SizedBox(height: 16),",
      "              Row(",
      "                children: [",
      "                  Expanded(",
      "                    child: ElevatedButton.icon(",
      "                      onPressed: () {",
      "                        ${5:// Add new item}",
      "                      },",
      "                      icon: const Icon(Icons.add),",
      "                      label: const Text('Add Item'),",
      "                    ),",
      "                  ),",
      "                  const SizedBox(width: 16),",
      "                  Expanded(",
      "                    child: OutlinedButton.icon(",
      "                      onPressed: () {",
      "                        ${6:// View reports}",
      "                      },",
      "                      icon: const Icon(Icons.analytics),",
      "                      label: const Text('Reports'),",
      "                    ),",
      "                  ),",
      "                ],",
      "              ),",
      "            ],",
      "          ),",
      "        ),",
      "      ),",
      "    );",
      "  }",
      "}$0"
    ]
  },

  "E-commerce Product Page": {
    "prefix": "flp-product",
    "description": "Complete e-commerce product detail page",
    "body": [
      "import 'package:flutter/material.dart';",
      "",
      "class ${1:Product}Page extends StatefulWidget {",
      "  const ${1:Product}Page({",
      "    super.key,",
      "    required this.productId,",
      "  });",
      "",
      "  final String productId;",
      "",
      "  @override",
      "  State<${1:Product}Page> createState() => _${1:Product}PageState();",
      "}",
      "",
      "class _${1:Product}PageState extends State<${1:Product}Page> {",
      "  int _selectedImageIndex = 0;",
      "  int _quantity = 1;",
      "  bool _isFavorite = false;",
      "  bool _isLoading = false;",
      "  ",
      "  final List<String> _productImages = [",
      "    'https://example.com/product1.jpg',",
      "    'https://example.com/product2.jpg',",
      "    'https://example.com/product3.jpg',",
      "  ];",
      "",
      "  final List<String> _sizes = ['S', 'M', 'L', 'XL'];",
      "  String? _selectedSize;",
      "",
      "  Future<void> _addToCart() async {",
      "    setState(() {",
      "      _isLoading = true;",
      "    });",
      "",
      "    // Simulate API call",
      "    await Future.delayed(const Duration(seconds: 1));",
      "",
      "    if (mounted) {",
      "      setState(() {",
      "        _isLoading = false;",
      "      });",
      "      ",
      "      ScaffoldMessenger.of(context).showSnackBar(",
      "        const SnackBar(",
      "          content: Text('Added to cart successfully!'),",
      "          backgroundColor: Colors.green,",
      "        ),",
      "      );",
      "    }",
      "  }",
      "",
      "  @override",
      "  Widget build(BuildContext context) {",
      "    return Scaffold(",
      "      body: CustomScrollView(",
      "        slivers: [",
      "          // Product Images Sliver",
      "          SliverAppBar(",
      "            expandedHeight: 400,",
      "            pinned: true,",
      "            backgroundColor: Theme.of(context).colorScheme.surface,",
      "            flexibleSpace: FlexibleSpaceBar(",
      "              background: Stack(",
      "                children: [",
      "                  PageView.builder(",
      "                    itemCount: _productImages.length,",
      "                    onPageChanged: (index) {",
      "                      setState(() {",
      "                        _selectedImageIndex = index;",
      "                      });",
      "                    },",
      "                    itemBuilder: (context, index) {",
      "                      return Image.network(",
      "                        _productImages[index],",
      "                        fit: BoxFit.cover,",
      "                        errorBuilder: (context, error, stackTrace) {",
      "                          return Container(",
      "                            color: Theme.of(context).colorScheme.surfaceVariant,",
      "                            child: const Icon(",
      "                              Icons.image_not_supported,",
      "                              size: 64,",
      "                            ),",
      "                          );",
      "                        },",
      "                      );",
      "                    },",
      "                  ),",
      "                  // Image indicators",
      "                  Positioned(",
      "                    bottom: 16,",
      "                    left: 0,",
      "                    right: 0,",
      "                    child: Row(",
      "                      mainAxisAlignment: MainAxisAlignment.center,",
      "                      children: List.generate(",
      "                        _productImages.length,",
      "                        (index) => Container(",
      "                          margin: const EdgeInsets.symmetric(horizontal: 2),",
      "                          width: 8,",
      "                          height: 8,",
      "                          decoration: BoxDecoration(",
      "                            shape: BoxShape.circle,",
      "                            color: _selectedImageIndex == index",
      "                                ? Colors.white",
      "                                : Colors.white.withOpacity(0.5),",
      "                          ),",
      "                        ),",
      "                      ),",
      "                    ),",
      "                  ),",
      "                ],",
      "              ),",
      "            ),",
      "            actions: [",
      "              IconButton(",
      "                onPressed: () {",
      "                  setState(() {",
      "                    _isFavorite = !_isFavorite;",
      "                  });",
      "                },",
      "                icon: Icon(",
      "                  _isFavorite ? Icons.favorite : Icons.favorite_border,",
      "                  color: _isFavorite ? Colors.red : null,",
      "                ),",
      "              ),",
      "              IconButton(",
      "                onPressed: () {",
      "                  ${2:// Handle share}",
      "                },",
      "                icon: const Icon(Icons.share),",
      "              ),",
      "            ],",
      "          ),",
      "          ",
      "          // Product Details",
      "          SliverToBoxAdapter(",
      "            child: Padding(",
      "              padding: const EdgeInsets.all(16),",
      "              child: Column(",
      "                crossAxisAlignment: CrossAxisAlignment.start,",
      "                children: [",
      "                  // Price and Rating",
      "                  Row(",
      "                    children: [",
      "                      Text(",
      "                        '\\$${3:99.99}',",
      "                        style: Theme.of(context).textTheme.headlineMedium?.copyWith(",
      "                          fontWeight: FontWeight.bold,",
      "                          color: Theme.of(context).colorScheme.primary,",
      "                        ),",
      "                      ),",
      "                      const SizedBox(width: 8),",
      "                      Text(",
      "                        '\\$${4:129.99}',",
      "                        style: Theme.of(context).textTheme.bodyLarge?.copyWith(",
      "                          decoration: TextDecoration.lineThrough,",
      "                          color: Theme.of(context).colorScheme.onSurface.withOpacity(0.6),",
      "                        ),",
      "                      ),",
      "                      const Spacer(),",
      "                      Row(",
      "                        children: [",
      "                          const Icon(Icons.star, color: Colors.amber, size: 20),",
      "                          const SizedBox(width: 4),",
      "                          Text('${5:4.5} (${6:123} reviews)'),",
      "                        ],",
      "                      ),",
      "                    ],",
      "                  ),",
      "                  const SizedBox(height: 16),",
      "                  ",
      "                  // Product Name",
      "                  Text(",
      "                    '${7:Product Name}',",
      "                    style: Theme.of(context).textTheme.headlineSmall?.copyWith(",
      "                      fontWeight: FontWeight.bold,",
      "                    ),",
      "                  ),",
      "                  const SizedBox(height: 8),",
      "                  ",
      "                  // Product Description",
      "                  Text(",
      "                    '${8:Product description goes here. This is a detailed description of the product with all its features and benefits.}',",
      "                    style: Theme.of(context).textTheme.bodyLarge,",
      "                  ),",
      "                  const SizedBox(height: 24),",
      "                  ",
      "                  // Size Selection",
      "                  Text(",
      "                    'Size',",
      "                    style: Theme.of(context).textTheme.titleMedium?.copyWith(",
      "                      fontWeight: FontWeight.bold,",
      "                    ),",
      "                  ),",
      "                  const SizedBox(height: 8),",
      "                  Wrap(",
      "                    spacing: 8,",
      "                    children: _sizes.map((size) {",
      "                      final isSelected = _selectedSize == size;",
      "                      return FilterChip(",
      "                        label: Text(size),",
      "                        selected: isSelected,",
      "                        onSelected: (selected) {",
      "                          setState(() {",
      "                            _selectedSize = selected ? size : null;",
      "                          });",
      "                        },",
      "                      );",
      "                    }).toList(),",
      "                  ),",
      "                  const SizedBox(height: 24),",
      "                  ",
      "                  // Quantity Selection",
      "                  Row(",
      "                    children: [",
      "                      Text(",
      "                        'Quantity',",
      "                        style: Theme.of(context).textTheme.titleMedium?.copyWith(",
      "                          fontWeight: FontWeight.bold,",
      "                        ),",
      "                      ),",
      "                      const Spacer(),",
      "                      Container(",
      "                        decoration: BoxDecoration(",
      "                          border: Border.all(",
      "                            color: Theme.of(context).colorScheme.outline,",
      "                          ),",
      "                          borderRadius: BorderRadius.circular(8),",
      "                        ),",
      "                        child: Row(",
      "                          children: [",
      "                            IconButton(",
      "                              onPressed: _quantity > 1",
      "                                  ? () {",
      "                                      setState(() {",
      "                                        _quantity--;",
      "                                      });",
      "                                    }",
      "                                  : null,",
      "                              icon: const Icon(Icons.remove),",
      "                            ),",
      "                            Container(",
      "                              width: 40,",
      "                              alignment: Alignment.center,",
      "                              child: Text(",
      "                                _quantity.toString(),",
      "                                style: Theme.of(context).textTheme.titleMedium,",
      "                              ),",
      "                            ),",
      "                            IconButton(",
      "                              onPressed: () {",
      "                                setState(() {",
      "                                  _quantity++;",
      "                                });",
      "                              },",
      "                              icon: const Icon(Icons.add),",
      "                            ),",
      "                          ],",
      "                        ),",
      "                      ),",
      "                    ],",
      "                  ),",
      "                  const SizedBox(height: 32),",
      "                ],",
      "              ),",
      "            ),",
      "          ),",
      "        ],",
      "      ),",
      "      ",
      "      // Bottom Action Bar",
      "      bottomNavigationBar: Container(",
      "        padding: const EdgeInsets.all(16),",
      "        decoration: BoxDecoration(",
      "          color: Theme.of(context).colorScheme.surface,",
      "          boxShadow: [",
      "            BoxShadow(",
      "              color: Colors.black.withOpacity(0.1),",
      "              blurRadius: 8,",
      "              offset: const Offset(0, -2),",
      "            ),",
      "          ],",
      "        ),",
      "        child: Row(",
      "          children: [",
      "            Expanded(",
      "              child: OutlinedButton(",
      "                onPressed: () {",
      "                  ${9:// Add to wishlist}",
      "                },",
      "                child: const Text('Add to Wishlist'),",
      "              ),",
      "            ),",
      "            const SizedBox(width: 16),",
      "            Expanded(",
      "              flex: 2,",
      "              child: FilledButton(",
      "                onPressed: _isLoading ? null : _addToCart,",
      "                child: _isLoading",
      "                    ? const SizedBox(",
      "                        width: 20,",
      "                        height: 20,",
      "                        child: CircularProgressIndicator(",
      "                          strokeWidth: 2,",
      "                          valueColor: AlwaysStoppedAnimation<Color>(Colors.white),",
      "                        ),",
      "                      )",
      "                    : const Text('Add to Cart'),",
      "              ),",
      "            ),",
      "          ],",
      "        ),",
      "      ),",
      "    );",
      "  }",
      "}$0"
    ]
  },

  "OnBoarding Page": {
    "prefix": "flp-onboarding",
    "description": "Complete onboarding page with page view",
    "body": [
      "import 'package:flutter/material.dart';",
      "",
      "class ${1:OnBoarding}Page extends StatefulWidget {",
      "  const ${1:OnBoarding}Page({super.key});",
      "",
      "  @override",
      "  State<${1:OnBoarding}Page> createState() => _${1:OnBoarding}PageState();",
      "}",
      "",
      "class _${1:OnBoarding}PageState extends State<${1:OnBoarding}Page> {",
      "  final PageController _pageController = PageController();",
      "  int _currentPage = 0;",
      "",
      "  final List<Map<String, dynamic>> _onboardingData = [",
      "    {",
      "      'title': '${2:Welcome to Our App}',",
      "      'description': '${3:Discover amazing features that will make your life easier and more productive.}',",
      "      'icon': Icons.${4:rocket_launch},",
      "      'color': Colors.blue,",
      "    },",
      "    {",
      "      'title': '${5:Stay Connected}',",
      "      'description': '${6:Connect with friends and family from anywhere in the world with our secure platform.}',",
      "      'icon': Icons.${7:people},",
      "      'color': Colors.green,",
      "    },",
      "    {",
      "      'title': '${8:Get Started}',",
      "      'description': '${9:You are all set! Start exploring and enjoy the amazing features we have built for you.}',",
      "      'icon': Icons.${10:check_circle},",
      "      'color': Colors.purple,",
      "    },",
      "  ];",
      "",
      "  @override",
      "  void dispose() {",
      "    _pageController.dispose();",
      "    super.dispose();",
      "  }",
      "",
      "  void _nextPage() {",
      "    if (_currentPage < _onboardingData.length - 1) {",
      "      _pageController.nextPage(",
      "        duration: const Duration(milliseconds: 300),",
      "        curve: Curves.easeInOut,",
      "      );",
      "    } else {",
      "      _completeOnboarding();",
      "    }",
      "  }",
      "",
      "  void _previousPage() {",
      "    if (_currentPage > 0) {",
      "      _pageController.previousPage(",
      "        duration: const Duration(milliseconds: 300),",
      "        curve: Curves.easeInOut,",
      "      );",
      "    }",
      "  }",
      "",
      "  void _completeOnboarding() {",
      "    ${11:// Handle onboarding completion}",
      "    Navigator.of(context).pushReplacementNamed('${12:/home}');",
      "  }",
      "",
      "  @override",
      "  Widget build(BuildContext context) {",
      "    return Scaffold(",
      "      backgroundColor: Theme.of(context).colorScheme.surface,",
      "      body: SafeArea(",
      "        child: Column(",
      "          children: [",
      "            // Skip Button",
      "            Padding(",
      "              padding: const EdgeInsets.all(16),",
      "              child: Row(",
      "                mainAxisAlignment: MainAxisAlignment.end,",
      "                children: [",
      "                  TextButton(",
      "                    onPressed: _completeOnboarding,",
      "                    child: const Text('Skip'),",
      "                  ),",
      "                ],",
      "              ),",
      "            ),",
      "            ",
      "            // Page View",
      "            Expanded(",
      "              child: PageView.builder(",
      "                controller: _pageController,",
      "                onPageChanged: (index) {",
      "                  setState(() {",
      "                    _currentPage = index;",
      "                  });",
      "                },",
      "                itemCount: _onboardingData.length,",
      "                itemBuilder: (context, index) {",
      "                  final data = _onboardingData[index];",
      "                  return Padding(",
      "                    padding: const EdgeInsets.all(32),",
      "                    child: Column(",
      "                      mainAxisAlignment: MainAxisAlignment.center,",
      "                      children: [",
      "                        // Icon",
      "                        Container(",
      "                          width: 120,",
      "                          height: 120,",
      "                          decoration: BoxDecoration(",
      "                            color: data['color'].withOpacity(0.1),",
      "                            shape: BoxShape.circle,",
      "                          ),",
      "                          child: Icon(",
      "                            data['icon'],",
      "                            size: 60,",
      "                            color: data['color'],",
      "                          ),",
      "                        ),",
      "                        const SizedBox(height: 48),",
      "                        ",
      "                        // Title",
      "                        Text(",
      "                          data['title'],",
      "                          style: Theme.of(context).textTheme.headlineMedium?.copyWith(",
      "                            fontWeight: FontWeight.bold,",
      "                          ),",
      "                          textAlign: TextAlign.center,",
      "                        ),",
      "                        const SizedBox(height: 24),",
      "                        ",
      "                        // Description",
      "                        Text(",
      "                          data['description'],",
      "                          style: Theme.of(context).textTheme.bodyLarge?.copyWith(",
      "                            color: Theme.of(context).colorScheme.onSurface.withOpacity(0.7),",
      "                          ),",
      "                          textAlign: TextAlign.center,",
      "                        ),",
      "                      ],",
      "                    ),",
      "                  );",
      "                },",
      "              ),",
      "            ),",
      "            ",
      "            // Page Indicators",
      "            Row(",
      "              mainAxisAlignment: MainAxisAlignment.center,",
      "              children: List.generate(",
      "                _onboardingData.length,",
      "                (index) => AnimatedContainer(",
      "                  duration: const Duration(milliseconds: 300),",
      "                  margin: const EdgeInsets.symmetric(horizontal: 4),",
      "                  width: _currentPage == index ? 24 : 8,",
      "                  height: 8,",
      "                  decoration: BoxDecoration(",
      "                    color: _currentPage == index",
      "                        ? Theme.of(context).colorScheme.primary",
      "                        : Theme.of(context).colorScheme.primary.withOpacity(0.3),",
      "                    borderRadius: BorderRadius.circular(4),",
      "                  ),",
      "                ),",
      "              ),",
      "            ),",
      "            const SizedBox(height: 32),",
      "            ",
      "            // Navigation Buttons",
      "            Padding(",
      "              padding: const EdgeInsets.all(16),",
      "              child: Row(",
      "                children: [",
      "                  if (_currentPage > 0)",
      "                    Expanded(",
      "                      child: OutlinedButton(",
      "                        onPressed: _previousPage,",
      "                        child: const Text('Previous'),",
      "                      ),",
      "                    ),",
      "                  if (_currentPage > 0) const SizedBox(width: 16),",
      "                  Expanded(",
      "                    flex: _currentPage == 0 ? 1 : 1,",
      "                    child: FilledButton(",
      "                      onPressed: _nextPage,",
      "                      child: Text(",
      "                        _currentPage == _onboardingData.length - 1",
      "                            ? 'Get Started'",
      "                            : 'Next',",
      "                      ),",
      "                    ),",
      "                  ),",
      "                ],",
      "              ),",
      "            ),",
      "          ],",
      "        ),",
      "      ),",
      "    );",
      "  }",
      "}$0"
    ]
  },

  "Chat Page": {
    "prefix": "flp-chat",
    "description": "Complete chat interface page",
    "body": [
      "import 'package:flutter/material.dart';",
      "",
      "class ${1:Chat}Page extends StatefulWidget {",
      "  const ${1:Chat}Page({",
      "    super.key,",
      "    required this.contactName,",
      "    this.contactAvatar,",
      "  });",
      "",
      "  final String contactName;",
      "  final String? contactAvatar;",
      "",
      "  @override",
      "  State<${1:Chat}Page> createState() => _${1:Chat}PageState();",
      "}",
      "",
      "class _${1:Chat}PageState extends State<${1:Chat}Page> {",
      "  final TextEditingController _messageController = TextEditingController();",
      "  final ScrollController _scrollController = ScrollController();",
      "  final List<Map<String, dynamic>> _messages = [",
      "    {",
      "      'text': 'Hey there! How are you doing?',",
      "      'isMe': false,",
      "      'timestamp': DateTime.now().subtract(const Duration(minutes: 5)),",
      "      'isRead': true,",
      "    },",
      "    {",
      "      'text': 'I am doing great! Thanks for asking. How about you?',",
      "      'isMe': true,",
      "      'timestamp': DateTime.now().subtract(const Duration(minutes: 3)),",
      "      'isRead': true,",
      "    },",
      "    {",
      "      'text': 'All good here! Just working on some projects.',",
      "      'isMe': false,",
      "      'timestamp': DateTime.now().subtract(const Duration(minutes: 1)),",
      "      'isRead': true,",
      "    },",
      "  ];",
      "",
      "  @override",
      "  void dispose() {",
      "    _messageController.dispose();",
      "    _scrollController.dispose();",
      "    super.dispose();",
      "  }",
      "",
      "  void _sendMessage() {",
      "    final text = _messageController.text.trim();",
      "    if (text.isNotEmpty) {",
      "      setState(() {",
      "        _messages.add({",
      "          'text': text,",
      "          'isMe': true,",
      "          'timestamp': DateTime.now(),",
      "          'isRead': false,",
      "        });",
      "      });",
      "      _messageController.clear();",
      "      _scrollToBottom();",
      "    }",
      "  }",
      "",
      "  void _scrollToBottom() {",
      "    WidgetsBinding.instance.addPostFrameCallback((_) {",
      "      if (_scrollController.hasClients) {",
      "        _scrollController.animateTo(",
      "          _scrollController.position.maxScrollExtent,",
      "          duration: const Duration(milliseconds: 300),",
      "          curve: Curves.easeOut,",
      "        );",
      "      }",
      "    });",
      "  }",
      "",
      "  String _formatTime(DateTime time) {",
      "    return '\\${time.hour.toString().padLeft(2, '0')}:\\${time.minute.toString().padLeft(2, '0')}';",
      "  }",
      "",
      "  @override",
      "  Widget build(BuildContext context) {",
      "    return Scaffold(",
      "      appBar: AppBar(",
      "        backgroundColor: Theme.of(context).colorScheme.surface,",
      "        elevation: 1,",
      "        title: Row(",
      "          children: [",
      "            CircleAvatar(",
      "              radius: 20,",
      "              backgroundColor: Theme.of(context).colorScheme.primaryContainer,",
      "              backgroundImage: widget.contactAvatar != null",
      "                  ? NetworkImage(widget.contactAvatar!)",
      "                  : null,",
      "              child: widget.contactAvatar == null",
      "                  ? Text(",
      "                      widget.contactName.substring(0, 1).toUpperCase(),",
      "                      style: TextStyle(",
      "                        color: Theme.of(context).colorScheme.onPrimaryContainer,",
      "                        fontWeight: FontWeight.bold,",
      "                      ),",
      "                    )",
      "                  : null,",
      "            ),",
      "            const SizedBox(width: 12),",
      "            Expanded(",
      "              child: Column(",
      "                crossAxisAlignment: CrossAxisAlignment.start,",
      "                children: [",
      "                  Text(",
      "                    widget.contactName,",
      "                    style: Theme.of(context).textTheme.titleMedium?.copyWith(",
      "                      fontWeight: FontWeight.w600,",
      "                    ),",
      "                  ),",
      "                  Text(",
      "                    '${2:Online}',",
      "                    style: Theme.of(context).textTheme.bodySmall?.copyWith(",
      "                      color: Colors.green,",
      "                    ),",
      "                  ),",
      "                ],",
      "              ),",
      "            ),",
      "          ],",
      "        ),",
      "        actions: [",
      "          IconButton(",
      "            icon: const Icon(Icons.call),",
      "            onPressed: () {",
      "              ${3:// Handle voice call}",
      "            },",
      "          ),",
      "          IconButton(",
      "            icon: const Icon(Icons.videocam),",
      "            onPressed: () {",
      "              ${4:// Handle video call}",
      "            },",
      "          ),",
      "        ],",
      "      ),",
      "      body: Column(",
      "        children: [",
      "          // Messages List",
      "          Expanded(",
      "            child: ListView.builder(",
      "              controller: _scrollController,",
      "              padding: const EdgeInsets.all(16),",
      "              itemCount: _messages.length,",
      "              itemBuilder: (context, index) {",
      "                final message = _messages[index];",
      "                final isMe = message['isMe'] as bool;",
      "                ",
      "                return Align(",
      "                  alignment: isMe ? Alignment.centerRight : Alignment.centerLeft,",
      "                  child: Container(",
      "                    margin: const EdgeInsets.only(bottom: 8),",
      "                    constraints: BoxConstraints(",
      "                      maxWidth: MediaQuery.of(context).size.width * 0.75,",
      "                    ),",
      "                    child: Column(",
      "                      crossAxisAlignment:",
      "                          isMe ? CrossAxisAlignment.end : CrossAxisAlignment.start,",
      "                      children: [",
      "                        Container(",
      "                          padding: const EdgeInsets.symmetric(",
      "                            horizontal: 16,",
      "                            vertical: 12,",
      "                          ),",
      "                          decoration: BoxDecoration(",
      "                            color: isMe",
      "                                ? Theme.of(context).colorScheme.primary",
      "                                : Theme.of(context).colorScheme.surfaceVariant,",
      "                            borderRadius: BorderRadius.circular(20).copyWith(",
      "                              bottomRight: isMe ? const Radius.circular(4) : null,",
      "                              bottomLeft: !isMe ? const Radius.circular(4) : null,",
      "                            ),",
      "                          ),",
      "                          child: Text(",
      "                            message['text'],",
      "                            style: TextStyle(",
      "                              color: isMe",
      "                                  ? Theme.of(context).colorScheme.onPrimary",
      "                                  : Theme.of(context).colorScheme.onSurfaceVariant,",
      "                            ),",
      "                          ),",
      "                        ),",
      "                        const SizedBox(height: 4),",
      "                        Row(",
      "                          mainAxisSize: MainAxisSize.min,",
      "                          children: [",
      "                            Text(",
      "                              _formatTime(message['timestamp']),",
      "                              style: Theme.of(context).textTheme.bodySmall?.copyWith(",
      "                                color: Theme.of(context)",
      "                                    .colorScheme",
      "                                    .onSurface",
      "                                    .withOpacity(0.6),",
      "                              ),",
      "                            ),",
      "                            if (isMe) ...[",
      "                              const SizedBox(width: 4),",
      "                              Icon(",
      "                                message['isRead']",
      "                                    ? Icons.done_all",
      "                                    : Icons.done,",
      "                                size: 16,",
      "                                color: message['isRead']",
      "                                    ? Colors.blue",
      "                                    : Theme.of(context)",
      "                                        .colorScheme",
      "                                        .onSurface",
      "                                        .withOpacity(0.6),",
      "                              ),",
      "                            ],",
      "                          ],",
      "                        ),",
      "                      ],",
      "                    ),",
      "                  ),",
      "                );",
      "              },",
      "            ),",
      "          ),",
      "          ",
      "          // Message Input",
      "          Container(",
      "            padding: const EdgeInsets.all(16),",
      "            decoration: BoxDecoration(",
      "              color: Theme.of(context).colorScheme.surface,",
      "              border: Border(",
      "                top: BorderSide(",
      "                  color: Theme.of(context).colorScheme.outline.withOpacity(0.2),",
      "                ),",
      "              ),",
      "            ),",
      "            child: Row(",
      "              children: [",
      "                IconButton(",
      "                  icon: const Icon(Icons.attach_file),",
      "                  onPressed: () {",
      "                    ${5:// Handle attachment}",
      "                  },",
      "                ),",
      "                Expanded(",
      "                  child: TextField(",
      "                    controller: _messageController,",
      "                    decoration: InputDecoration(",
      "                      hintText: 'Type a message...',",
      "                      border: OutlineInputBorder(",
      "                        borderRadius: BorderRadius.circular(24),",
      "                        borderSide: BorderSide.none,",
      "                      ),",
      "                      filled: true,",
      "                      fillColor:",
      "                          Theme.of(context).colorScheme.surfaceVariant.withOpacity(0.5),",
      "                      contentPadding: const EdgeInsets.symmetric(",
      "                        horizontal: 16,",
      "                        vertical: 8,",
      "                      ),",
      "                    ),",
      "                    textInputAction: TextInputAction.send,",
      "                    onSubmitted: (_) => _sendMessage(),",
      "                  ),",
      "                ),",
      "                IconButton(",
      "                  icon: const Icon(Icons.send),",
      "                  onPressed: _sendMessage,",
      "                ),",
      "              ],",
      "            ),",
      "          ),",
      "        ],",
      "      ),",
      "    );",
      "  }",
      "}$0"
    ]
  }
      "            ],",
      "          ),",
      "        ),",
      "      ),",
      "    );",
      "  }",
      "",
      "  Widget _buildStatCard({",
      "    required IconData icon,",
      "    required String title,",
      "    required String value,",
      "    required String change,",
      "    required bool isPositive,",
      "  }) {",
      "    return Card(",
      "      child: Padding(",
      "        padding: const EdgeInsets.all(16),",
      "        child: Column(",
      "          crossAxisAlignment: CrossAxisAlignment.start,",
      "          children: [",
      "            Row(",
      "              children: [",
      "                Icon(",
      "                  icon,",
      "                  color: Theme.of(context).colorScheme.primary,",
      "                ),",
      "                const Spacer(),",
      "                Container(",
      "                  padding: const EdgeInsets.symmetric(",
      "                    horizontal: 8,",
      "                    vertical: 4,",
      "                  ),",
      "                  decoration: BoxDecoration(",
      "                    color: isPositive",
      "                        ? Colors.green.withOpacity(0.1)",
      "                        : Colors.red.withOpacity(0.1),",
      "                    borderRadius: BorderRadius.circular(12),",
      "                  ),",
      "                  child: Text(",
      "                    change,",
      "                    style: TextStyle(",
      "                      color: isPositive ? Colors.green : Colors.red,",
      "                      fontWeight: FontWeight.bold,",
      "                      fontSize: 12,",
      "                    ),",
      "                  ),",
      "                ),",
      "              ],",
      "            ),",
      "            const SizedBox(height: 8),",
      "            Text(",
      "              value,",
      "              style: Theme.of(context).textTheme.headlineSmall?.copyWith(",
      "                fontWeight: FontWeight.bold,",
      "              ),",
      "            ),",
      "            const SizedBox(height: 4),",
      "            Text(",
      "              title,",
      "              style: Theme.of(context).textTheme.bodyMedium?.copyWith(",
      "                color: Theme.of(context).colorScheme.onSurfaceVariant,",
      "              ),",
      "            ),",
      "          ],",
      "        ),",
      "      ),",
      "    );",
      "  }",
      "}$0"
    ]
  }
}
